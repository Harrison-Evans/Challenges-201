#!/usr/bin/env python
#harrison evans
#November 17, 2021
#Malware checker 3.0
#challenge 33 401

#https://stackoverflow.com/questions/28856737/python-generating-a-md5-hash-of-a-file-using-hashlib
#https://stackoverflow.com/questions/24905062/how-to-hash-a-variable-in-python
#https://github.com/codefellows/seattle-cyber-401d3/blob/main/class-32/challenges/DEMO.md


#Library
import os
import hashlib,datetime
from sys import platform
from time import sleep



#Getting the user input to search specified folder#
def get_hashcode():
    folder_name = input("which folder do you want to scan? ")
    output_search(folder_name)
#Getting current time stamp
def get_time():
    dateTimeObj = datetime.datetime.now()
    timestampStr = dateTimeObj.strftime("%b-%d-%Y-%H:%M:%S")
    return timestampStr

def malware_check(the_hash):
    apikey= os.getenv('API_KEY_VIRUSTOTAL')
    #hash = '7b7fd57f230dc640805fbc76539821422e1ee468'
    query = 'python3 virustotal-search.py -k ' + apikey + ' -m ' + the_hash

    os.system(query)


#Outputting final results
def output_search(pt):
    abs_path = os.path.abspath(pt)
    print("Timestamp            File-name            Hash-code             Size     File-path")
    for root, dirs, files in os.walk(abs_path):
            for filo in files:
                try:
                    full_path= os.path.join(root, filo)
                    hash_value = hash_co(full_path)
                    print(f"{get_time()} {filo} {hash_value}   {os.path.getsize(full_path)}   {full_path}")
                    sleep(1.5)
                except Exception as msg:
                    print(msg)
                    continue
#Getting the hash code
def hash_co(fn):
    md_hash = hashlib.md5()
    with open(fn, "rb") as f:
        for byte_block in iter(lambda: f.read(4896),b""):
            md_hash.update(byte_block)
    f.close()
    return md_hash.hexdigest()

get_hashcode()
